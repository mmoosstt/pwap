"use strict";
/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
exports.ApiException = exports.Valuations = exports.ValuationDetails = exports.ValuationDetailTexts = exports.ValuationDetailText = exports.ValuationDetail = exports.Valuation = exports.ValidationError = exports.Schools = exports.SchoolClasses = exports.SchoolClass = exports.School = exports.Pupils = exports.PupilValuations = exports.PupilValuationSets = exports.PupilValuationSet = exports.PupilValuation = exports.Pupil = exports.HTTPValidationError = exports.ValuationDetailTextClient = exports.ReportClient = exports.ValuationDetailClient = exports.ValuationClient = exports.SchoolClassClient = exports.SchoolClient = exports.PupilValuationSetClient = exports.PupilValuationClient = exports.PupilClient = void 0;
var PupilClient = /** @class */ (function () {
    function PupilClient(baseUrl, http) {
        this.jsonParseReviver = undefined;
        this.http = http ? http : window;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * Getall
     * @return Successful Response
     */
    PupilClient.prototype.all = function () {
        var _this = this;
        var url_ = this.baseUrl + "/spos/pupil/all";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processAll(_response);
        });
    };
    PupilClient.prototype.processAll = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = Pupils.fromJS(resultData200);
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Getdefault
     * @return Successful Response
     */
    PupilClient.prototype["default"] = function () {
        var _this = this;
        var url_ = this.baseUrl + "/spos/pupil/default";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processDefault(_response);
        });
    };
    PupilClient.prototype.processDefault = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = Pupil.fromJS(resultData200);
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Put
     * @return Successful Response
     */
    PupilClient.prototype.pupilPut = function (body) {
        var _this = this;
        var url_ = this.baseUrl + "/spos/pupil/";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(body);
        var options_ = {
            body: content_,
            method: "PUT",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processPupilPut(_response);
        });
    };
    PupilClient.prototype.processPupilPut = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = Pupil.fromJS(resultData200);
                return result200;
            });
        }
        else if (status === 422) {
            return response.text().then(function (_responseText) {
                var result422 = null;
                var resultData422 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result422 = HTTPValidationError.fromJS(resultData422);
                return throwException("Validation Error", status, _responseText, _headers, result422);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Delete
     * @return Successful Response
     */
    PupilClient.prototype.pupilDelete = function (pupilId) {
        var _this = this;
        var url_ = this.baseUrl + "/spos/pupil/?";
        if (pupilId === undefined || pupilId === null)
            throw new Error("The parameter 'pupilId' must be defined and cannot be null.");
        else
            url_ += "pupilId=" + encodeURIComponent("" + pupilId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processPupilDelete(_response);
        });
    };
    PupilClient.prototype.processPupilDelete = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return result200;
            });
        }
        else if (status === 422) {
            return response.text().then(function (_responseText) {
                var result422 = null;
                var resultData422 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result422 = HTTPValidationError.fromJS(resultData422);
                return throwException("Validation Error", status, _responseText, _headers, result422);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    return PupilClient;
}());
exports.PupilClient = PupilClient;
var PupilValuationClient = /** @class */ (function () {
    function PupilValuationClient(baseUrl, http) {
        this.jsonParseReviver = undefined;
        this.http = http ? http : window;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * Getall
     * @return Successful Response
     */
    PupilValuationClient.prototype.all = function () {
        var _this = this;
        var url_ = this.baseUrl + "/spos/pupilvaluation/all";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processAll(_response);
        });
    };
    PupilValuationClient.prototype.processAll = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = PupilValuations.fromJS(resultData200);
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Getdefault
     * @return Successful Response
     */
    PupilValuationClient.prototype["default"] = function () {
        var _this = this;
        var url_ = this.baseUrl + "/spos/pupilvaluation/default";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processDefault(_response);
        });
    };
    PupilValuationClient.prototype.processDefault = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = PupilValuation.fromJS(resultData200);
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Put
     * @return Successful Response
     */
    PupilValuationClient.prototype.pupilvaluationPut = function (body) {
        var _this = this;
        var url_ = this.baseUrl + "/spos/pupilvaluation/";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(body);
        var options_ = {
            body: content_,
            method: "PUT",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processPupilvaluationPut(_response);
        });
    };
    PupilValuationClient.prototype.processPupilvaluationPut = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = PupilValuation.fromJS(resultData200);
                return result200;
            });
        }
        else if (status === 422) {
            return response.text().then(function (_responseText) {
                var result422 = null;
                var resultData422 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result422 = HTTPValidationError.fromJS(resultData422);
                return throwException("Validation Error", status, _responseText, _headers, result422);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Delete
     * @return Successful Response
     */
    PupilValuationClient.prototype.pupilvaluationDelete = function (pupilValuationId) {
        var _this = this;
        var url_ = this.baseUrl + "/spos/pupilvaluation/?";
        if (pupilValuationId === undefined || pupilValuationId === null)
            throw new Error("The parameter 'pupilValuationId' must be defined and cannot be null.");
        else
            url_ += "pupilValuationId=" + encodeURIComponent("" + pupilValuationId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processPupilvaluationDelete(_response);
        });
    };
    PupilValuationClient.prototype.processPupilvaluationDelete = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return result200;
            });
        }
        else if (status === 422) {
            return response.text().then(function (_responseText) {
                var result422 = null;
                var resultData422 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result422 = HTTPValidationError.fromJS(resultData422);
                return throwException("Validation Error", status, _responseText, _headers, result422);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    return PupilValuationClient;
}());
exports.PupilValuationClient = PupilValuationClient;
var PupilValuationSetClient = /** @class */ (function () {
    function PupilValuationSetClient(baseUrl, http) {
        this.jsonParseReviver = undefined;
        this.http = http ? http : window;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * Getall
     * @return Successful Response
     */
    PupilValuationSetClient.prototype.all = function () {
        var _this = this;
        var url_ = this.baseUrl + "/spos/pupilvaluationset/all";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processAll(_response);
        });
    };
    PupilValuationSetClient.prototype.processAll = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = PupilValuationSets.fromJS(resultData200);
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Getdefault
     * @return Successful Response
     */
    PupilValuationSetClient.prototype["default"] = function () {
        var _this = this;
        var url_ = this.baseUrl + "/spos/pupilvaluationset/default";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processDefault(_response);
        });
    };
    PupilValuationSetClient.prototype.processDefault = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = PupilValuationSet.fromJS(resultData200);
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Put
     * @return Successful Response
     */
    PupilValuationSetClient.prototype.pupilvaluationsetPut = function (body) {
        var _this = this;
        var url_ = this.baseUrl + "/spos/pupilvaluationset/";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(body);
        var options_ = {
            body: content_,
            method: "PUT",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processPupilvaluationsetPut(_response);
        });
    };
    PupilValuationSetClient.prototype.processPupilvaluationsetPut = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = PupilValuationSet.fromJS(resultData200);
                return result200;
            });
        }
        else if (status === 422) {
            return response.text().then(function (_responseText) {
                var result422 = null;
                var resultData422 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result422 = HTTPValidationError.fromJS(resultData422);
                return throwException("Validation Error", status, _responseText, _headers, result422);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Delete
     * @return Successful Response
     */
    PupilValuationSetClient.prototype.pupilvaluationsetDelete = function (pupilValuationSetId) {
        var _this = this;
        var url_ = this.baseUrl + "/spos/pupilvaluationset/?";
        if (pupilValuationSetId === undefined || pupilValuationSetId === null)
            throw new Error("The parameter 'pupilValuationSetId' must be defined and cannot be null.");
        else
            url_ += "pupilValuationSetId=" + encodeURIComponent("" + pupilValuationSetId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processPupilvaluationsetDelete(_response);
        });
    };
    PupilValuationSetClient.prototype.processPupilvaluationsetDelete = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return result200;
            });
        }
        else if (status === 422) {
            return response.text().then(function (_responseText) {
                var result422 = null;
                var resultData422 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result422 = HTTPValidationError.fromJS(resultData422);
                return throwException("Validation Error", status, _responseText, _headers, result422);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    return PupilValuationSetClient;
}());
exports.PupilValuationSetClient = PupilValuationSetClient;
var SchoolClient = /** @class */ (function () {
    function SchoolClient(baseUrl, http) {
        this.jsonParseReviver = undefined;
        this.http = http ? http : window;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * Getall
     * @return Successful Response
     */
    SchoolClient.prototype.all = function () {
        var _this = this;
        var url_ = this.baseUrl + "/spos/school/all";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processAll(_response);
        });
    };
    SchoolClient.prototype.processAll = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = Schools.fromJS(resultData200);
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Getdefault
     * @return Successful Response
     */
    SchoolClient.prototype["default"] = function () {
        var _this = this;
        var url_ = this.baseUrl + "/spos/school/default";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processDefault(_response);
        });
    };
    SchoolClient.prototype.processDefault = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = School.fromJS(resultData200);
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Put
     * @return Successful Response
     */
    SchoolClient.prototype.schoolPut = function (body) {
        var _this = this;
        var url_ = this.baseUrl + "/spos/school/";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(body);
        var options_ = {
            body: content_,
            method: "PUT",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processSchoolPut(_response);
        });
    };
    SchoolClient.prototype.processSchoolPut = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = School.fromJS(resultData200);
                return result200;
            });
        }
        else if (status === 422) {
            return response.text().then(function (_responseText) {
                var result422 = null;
                var resultData422 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result422 = HTTPValidationError.fromJS(resultData422);
                return throwException("Validation Error", status, _responseText, _headers, result422);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Delete
     * @return Successful Response
     */
    SchoolClient.prototype.schoolDelete = function (schoolId) {
        var _this = this;
        var url_ = this.baseUrl + "/spos/school/?";
        if (schoolId === undefined || schoolId === null)
            throw new Error("The parameter 'schoolId' must be defined and cannot be null.");
        else
            url_ += "schoolId=" + encodeURIComponent("" + schoolId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processSchoolDelete(_response);
        });
    };
    SchoolClient.prototype.processSchoolDelete = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return result200;
            });
        }
        else if (status === 422) {
            return response.text().then(function (_responseText) {
                var result422 = null;
                var resultData422 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result422 = HTTPValidationError.fromJS(resultData422);
                return throwException("Validation Error", status, _responseText, _headers, result422);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    return SchoolClient;
}());
exports.SchoolClient = SchoolClient;
var SchoolClassClient = /** @class */ (function () {
    function SchoolClassClient(baseUrl, http) {
        this.jsonParseReviver = undefined;
        this.http = http ? http : window;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * Getall
     * @return Successful Response
     */
    SchoolClassClient.prototype.all = function () {
        var _this = this;
        var url_ = this.baseUrl + "/spos/schoolclass/all";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processAll(_response);
        });
    };
    SchoolClassClient.prototype.processAll = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = SchoolClasses.fromJS(resultData200);
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Getdefault
     * @return Successful Response
     */
    SchoolClassClient.prototype["default"] = function () {
        var _this = this;
        var url_ = this.baseUrl + "/spos/schoolclass/default";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processDefault(_response);
        });
    };
    SchoolClassClient.prototype.processDefault = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = SchoolClass.fromJS(resultData200);
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Put
     * @return Successful Response
     */
    SchoolClassClient.prototype.schoolclassPut = function (body) {
        var _this = this;
        var url_ = this.baseUrl + "/spos/schoolclass/";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(body);
        var options_ = {
            body: content_,
            method: "PUT",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processSchoolclassPut(_response);
        });
    };
    SchoolClassClient.prototype.processSchoolclassPut = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = SchoolClass.fromJS(resultData200);
                return result200;
            });
        }
        else if (status === 422) {
            return response.text().then(function (_responseText) {
                var result422 = null;
                var resultData422 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result422 = HTTPValidationError.fromJS(resultData422);
                return throwException("Validation Error", status, _responseText, _headers, result422);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Delete
     * @return Successful Response
     */
    SchoolClassClient.prototype.schoolclassDelete = function (schoolClassId) {
        var _this = this;
        var url_ = this.baseUrl + "/spos/schoolclass/?";
        if (schoolClassId === undefined || schoolClassId === null)
            throw new Error("The parameter 'schoolClassId' must be defined and cannot be null.");
        else
            url_ += "schoolClassId=" + encodeURIComponent("" + schoolClassId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processSchoolclassDelete(_response);
        });
    };
    SchoolClassClient.prototype.processSchoolclassDelete = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return result200;
            });
        }
        else if (status === 422) {
            return response.text().then(function (_responseText) {
                var result422 = null;
                var resultData422 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result422 = HTTPValidationError.fromJS(resultData422);
                return throwException("Validation Error", status, _responseText, _headers, result422);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    return SchoolClassClient;
}());
exports.SchoolClassClient = SchoolClassClient;
var ValuationClient = /** @class */ (function () {
    function ValuationClient(baseUrl, http) {
        this.jsonParseReviver = undefined;
        this.http = http ? http : window;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * Getall
     * @return Successful Response
     */
    ValuationClient.prototype.all = function () {
        var _this = this;
        var url_ = this.baseUrl + "/spos/valuation/all";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processAll(_response);
        });
    };
    ValuationClient.prototype.processAll = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = Valuations.fromJS(resultData200);
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Getdefault
     * @return Successful Response
     */
    ValuationClient.prototype["default"] = function () {
        var _this = this;
        var url_ = this.baseUrl + "/spos/valuation/default";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processDefault(_response);
        });
    };
    ValuationClient.prototype.processDefault = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = Valuation.fromJS(resultData200);
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Put
     * @return Successful Response
     */
    ValuationClient.prototype.valuationPut = function (body) {
        var _this = this;
        var url_ = this.baseUrl + "/spos/valuation/";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(body);
        var options_ = {
            body: content_,
            method: "PUT",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processValuationPut(_response);
        });
    };
    ValuationClient.prototype.processValuationPut = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = Valuation.fromJS(resultData200);
                return result200;
            });
        }
        else if (status === 422) {
            return response.text().then(function (_responseText) {
                var result422 = null;
                var resultData422 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result422 = HTTPValidationError.fromJS(resultData422);
                return throwException("Validation Error", status, _responseText, _headers, result422);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Delete
     * @return Successful Response
     */
    ValuationClient.prototype.valuationDelete = function (valuationId) {
        var _this = this;
        var url_ = this.baseUrl + "/spos/valuation/?";
        if (valuationId === undefined || valuationId === null)
            throw new Error("The parameter 'valuationId' must be defined and cannot be null.");
        else
            url_ += "valuationId=" + encodeURIComponent("" + valuationId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processValuationDelete(_response);
        });
    };
    ValuationClient.prototype.processValuationDelete = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return result200;
            });
        }
        else if (status === 422) {
            return response.text().then(function (_responseText) {
                var result422 = null;
                var resultData422 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result422 = HTTPValidationError.fromJS(resultData422);
                return throwException("Validation Error", status, _responseText, _headers, result422);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    return ValuationClient;
}());
exports.ValuationClient = ValuationClient;
var ValuationDetailClient = /** @class */ (function () {
    function ValuationDetailClient(baseUrl, http) {
        this.jsonParseReviver = undefined;
        this.http = http ? http : window;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * Getall
     * @return Successful Response
     */
    ValuationDetailClient.prototype.all = function () {
        var _this = this;
        var url_ = this.baseUrl + "/spos/valuationdetail/all";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processAll(_response);
        });
    };
    ValuationDetailClient.prototype.processAll = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = ValuationDetails.fromJS(resultData200);
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Getdefault
     * @return Successful Response
     */
    ValuationDetailClient.prototype["default"] = function () {
        var _this = this;
        var url_ = this.baseUrl + "/spos/valuationdetail/default";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processDefault(_response);
        });
    };
    ValuationDetailClient.prototype.processDefault = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = ValuationDetail.fromJS(resultData200);
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Put
     * @return Successful Response
     */
    ValuationDetailClient.prototype.valuationdetailPut = function (body) {
        var _this = this;
        var url_ = this.baseUrl + "/spos/valuationdetail/";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(body);
        var options_ = {
            body: content_,
            method: "PUT",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processValuationdetailPut(_response);
        });
    };
    ValuationDetailClient.prototype.processValuationdetailPut = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = ValuationDetail.fromJS(resultData200);
                return result200;
            });
        }
        else if (status === 422) {
            return response.text().then(function (_responseText) {
                var result422 = null;
                var resultData422 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result422 = HTTPValidationError.fromJS(resultData422);
                return throwException("Validation Error", status, _responseText, _headers, result422);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Delete
     * @return Successful Response
     */
    ValuationDetailClient.prototype.valuationdetailDelete = function (valuationDetailId) {
        var _this = this;
        var url_ = this.baseUrl + "/spos/valuationdetail/?";
        if (valuationDetailId === undefined || valuationDetailId === null)
            throw new Error("The parameter 'valuationDetailId' must be defined and cannot be null.");
        else
            url_ += "valuationDetailId=" + encodeURIComponent("" + valuationDetailId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processValuationdetailDelete(_response);
        });
    };
    ValuationDetailClient.prototype.processValuationdetailDelete = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return result200;
            });
        }
        else if (status === 422) {
            return response.text().then(function (_responseText) {
                var result422 = null;
                var resultData422 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result422 = HTTPValidationError.fromJS(resultData422);
                return throwException("Validation Error", status, _responseText, _headers, result422);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    return ValuationDetailClient;
}());
exports.ValuationDetailClient = ValuationDetailClient;
var ReportClient = /** @class */ (function () {
    function ReportClient(baseUrl, http) {
        this.jsonParseReviver = undefined;
        this.http = http ? http : window;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * Requestpupilreport
     * @return Successful Response
     */
    ReportClient.prototype.pupil = function (pupilId) {
        var _this = this;
        var url_ = this.baseUrl + "/spos/report/pupil?";
        if (pupilId === undefined || pupilId === null)
            throw new Error("The parameter 'pupilId' must be defined and cannot be null.");
        else
            url_ += "pupilId=" + encodeURIComponent("" + pupilId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "GET",
            headers: {}
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processPupil(_response);
        });
    };
    ReportClient.prototype.processPupil = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                return;
            });
        }
        else if (status === 422) {
            return response.text().then(function (_responseText) {
                var result422 = null;
                var resultData422 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result422 = HTTPValidationError.fromJS(resultData422);
                return throwException("Validation Error", status, _responseText, _headers, result422);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Requestschoolclassreport
     * @return Successful Response
     */
    ReportClient.prototype.schoolclass = function (schoolClassId) {
        var _this = this;
        var url_ = this.baseUrl + "/spos/report/schoolclass?";
        if (schoolClassId === undefined || schoolClassId === null)
            throw new Error("The parameter 'schoolClassId' must be defined and cannot be null.");
        else
            url_ += "schoolClassId=" + encodeURIComponent("" + schoolClassId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "GET",
            headers: {}
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processSchoolclass(_response);
        });
    };
    ReportClient.prototype.processSchoolclass = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                return;
            });
        }
        else if (status === 422) {
            return response.text().then(function (_responseText) {
                var result422 = null;
                var resultData422 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result422 = HTTPValidationError.fromJS(resultData422);
                return throwException("Validation Error", status, _responseText, _headers, result422);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    return ReportClient;
}());
exports.ReportClient = ReportClient;
var ValuationDetailTextClient = /** @class */ (function () {
    function ValuationDetailTextClient(baseUrl, http) {
        this.jsonParseReviver = undefined;
        this.http = http ? http : window;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }
    /**
     * Getall
     * @return Successful Response
     */
    ValuationDetailTextClient.prototype.all = function () {
        var _this = this;
        var url_ = this.baseUrl + "/spos/valuationdetailtext/all";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processAll(_response);
        });
    };
    ValuationDetailTextClient.prototype.processAll = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = ValuationDetailTexts.fromJS(resultData200);
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Getdefault
     * @return Successful Response
     */
    ValuationDetailTextClient.prototype["default"] = function () {
        var _this = this;
        var url_ = this.baseUrl + "/spos/valuationdetailtext/default";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "GET",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processDefault(_response);
        });
    };
    ValuationDetailTextClient.prototype.processDefault = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = ValuationDetailText.fromJS(resultData200);
                return result200;
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Put
     * @return Successful Response
     */
    ValuationDetailTextClient.prototype.valuationdetailtextPut = function (body) {
        var _this = this;
        var url_ = this.baseUrl + "/spos/valuationdetailtext/";
        url_ = url_.replace(/[?&]$/, "");
        var content_ = JSON.stringify(body);
        var options_ = {
            body: content_,
            method: "PUT",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processValuationdetailtextPut(_response);
        });
    };
    ValuationDetailTextClient.prototype.processValuationdetailtextPut = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = ValuationDetailText.fromJS(resultData200);
                return result200;
            });
        }
        else if (status === 422) {
            return response.text().then(function (_responseText) {
                var result422 = null;
                var resultData422 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result422 = HTTPValidationError.fromJS(resultData422);
                return throwException("Validation Error", status, _responseText, _headers, result422);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    /**
     * Delete
     * @return Successful Response
     */
    ValuationDetailTextClient.prototype.valuationdetailtextDelete = function (valuationDetailTextId) {
        var _this = this;
        var url_ = this.baseUrl + "/spos/valuationdetailtext/?";
        if (valuationDetailTextId === undefined || valuationDetailTextId === null)
            throw new Error("The parameter 'valuationDetailTextId' must be defined and cannot be null.");
        else
            url_ += "ValuationDetailTextId=" + encodeURIComponent("" + valuationDetailTextId) + "&";
        url_ = url_.replace(/[?&]$/, "");
        var options_ = {
            method: "DELETE",
            headers: {
                "Accept": "application/json"
            }
        };
        return this.http.fetch(url_, options_).then(function (_response) {
            return _this.processValuationdetailtextDelete(_response);
        });
    };
    ValuationDetailTextClient.prototype.processValuationdetailtextDelete = function (response) {
        var _this = this;
        var status = response.status;
        var _headers = {};
        if (response.headers && response.headers.forEach) {
            response.headers.forEach(function (v, k) { return _headers[k] = v; });
        }
        ;
        if (status === 200) {
            return response.text().then(function (_responseText) {
                var result200 = null;
                var resultData200 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result200 = resultData200 !== undefined ? resultData200 : null;
                return result200;
            });
        }
        else if (status === 422) {
            return response.text().then(function (_responseText) {
                var result422 = null;
                var resultData422 = _responseText === "" ? null : JSON.parse(_responseText, _this.jsonParseReviver);
                result422 = HTTPValidationError.fromJS(resultData422);
                return throwException("Validation Error", status, _responseText, _headers, result422);
            });
        }
        else if (status !== 200 && status !== 204) {
            return response.text().then(function (_responseText) {
                return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            });
        }
        return Promise.resolve(null);
    };
    return ValuationDetailTextClient;
}());
exports.ValuationDetailTextClient = ValuationDetailTextClient;
var HTTPValidationError = /** @class */ (function () {
    function HTTPValidationError(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    HTTPValidationError.prototype.init = function (_data) {
        if (_data) {
            if (Array.isArray(_data["detail"])) {
                this.detail = [];
                for (var _i = 0, _a = _data["detail"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.detail.push(ValidationError.fromJS(item));
                }
            }
        }
    };
    HTTPValidationError.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new HTTPValidationError();
        result.init(data);
        return result;
    };
    HTTPValidationError.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.detail)) {
            data["detail"] = [];
            for (var _i = 0, _a = this.detail; _i < _a.length; _i++) {
                var item = _a[_i];
                data["detail"].push(item.toJSON());
            }
        }
        return data;
    };
    return HTTPValidationError;
}());
exports.HTTPValidationError = HTTPValidationError;
var Pupil = /** @class */ (function () {
    function Pupil(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.id = "00000000-0000-0000-0000-000000000000";
            this.schoolClassId = "00000000-0000-0000-0000-000000000000";
            this.type = "pupil";
            this.name = "<insert>";
            this.familyName = "<insert>";
            this.givenName = "<insert>";
        }
    }
    Pupil.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"] !== undefined ? _data["id"] : "00000000-0000-0000-0000-000000000000";
            this.schoolClassId = _data["schoolClassId"] !== undefined ? _data["schoolClassId"] : "00000000-0000-0000-0000-000000000000";
            this.type = _data["type"] !== undefined ? _data["type"] : "pupil";
            this.name = _data["name"] !== undefined ? _data["name"] : "<insert>";
            this.familyName = _data["familyName"] !== undefined ? _data["familyName"] : "<insert>";
            this.givenName = _data["givenName"] !== undefined ? _data["givenName"] : "<insert>";
            this.changeDate = _data["changeDate"] ? new Date(_data["changeDate"].toString()) : undefined;
        }
    };
    Pupil.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new Pupil();
        result.init(data);
        return result;
    };
    Pupil.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["schoolClassId"] = this.schoolClassId;
        data["type"] = this.type;
        data["name"] = this.name;
        data["familyName"] = this.familyName;
        data["givenName"] = this.givenName;
        data["changeDate"] = this.changeDate ? this.changeDate.toISOString() : undefined;
        return data;
    };
    return Pupil;
}());
exports.Pupil = Pupil;
var PupilValuation = /** @class */ (function () {
    function PupilValuation(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.id = "00000000-0000-0000-0000-000000000000";
            this.pupilValuationSetId = "00000000-0000-0000-0000-000000000000";
            this.valuationId = "00000000-0000-0000-0000-000000000000";
            this.type = "pupilValuation";
            this.name = "<insert>";
            this.grade = 0;
            this.gradeText = "<insert>";
        }
    }
    PupilValuation.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"] !== undefined ? _data["id"] : "00000000-0000-0000-0000-000000000000";
            this.pupilValuationSetId = _data["pupilValuationSetId"] !== undefined ? _data["pupilValuationSetId"] : "00000000-0000-0000-0000-000000000000";
            this.valuationId = _data["valuationId"] !== undefined ? _data["valuationId"] : "00000000-0000-0000-0000-000000000000";
            this.type = _data["type"] !== undefined ? _data["type"] : "pupilValuation";
            this.name = _data["name"] !== undefined ? _data["name"] : "<insert>";
            this.grade = _data["grade"] !== undefined ? _data["grade"] : 0;
            this.gradeText = _data["gradeText"] !== undefined ? _data["gradeText"] : "<insert>";
            this.changeDate = _data["changeDate"] ? new Date(_data["changeDate"].toString()) : undefined;
        }
    };
    PupilValuation.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PupilValuation();
        result.init(data);
        return result;
    };
    PupilValuation.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["pupilValuationSetId"] = this.pupilValuationSetId;
        data["valuationId"] = this.valuationId;
        data["type"] = this.type;
        data["name"] = this.name;
        data["grade"] = this.grade;
        data["gradeText"] = this.gradeText;
        data["changeDate"] = this.changeDate ? this.changeDate.toISOString() : undefined;
        return data;
    };
    return PupilValuation;
}());
exports.PupilValuation = PupilValuation;
var PupilValuationSet = /** @class */ (function () {
    function PupilValuationSet(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.id = "00000000-0000-0000-0000-000000000000";
            this.pupilId = "00000000-0000-0000-0000-000000000000";
            this.type = "pupilValuationSet";
            this.name = "<insert>";
        }
    }
    PupilValuationSet.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"] !== undefined ? _data["id"] : "00000000-0000-0000-0000-000000000000";
            this.pupilId = _data["pupilId"] !== undefined ? _data["pupilId"] : "00000000-0000-0000-0000-000000000000";
            this.type = _data["type"] !== undefined ? _data["type"] : "pupilValuationSet";
            this.name = _data["name"] !== undefined ? _data["name"] : "<insert>";
            this.changeDate = _data["changeDate"] ? new Date(_data["changeDate"].toString()) : undefined;
        }
    };
    PupilValuationSet.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PupilValuationSet();
        result.init(data);
        return result;
    };
    PupilValuationSet.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["pupilId"] = this.pupilId;
        data["type"] = this.type;
        data["name"] = this.name;
        data["changeDate"] = this.changeDate ? this.changeDate.toISOString() : undefined;
        return data;
    };
    return PupilValuationSet;
}());
exports.PupilValuationSet = PupilValuationSet;
var PupilValuationSets = /** @class */ (function () {
    function PupilValuationSets(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PupilValuationSets.prototype.init = function (_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (var _i = 0, _a = _data["items"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.items.push(PupilValuationSet.fromJS(item));
                }
            }
        }
    };
    PupilValuationSets.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PupilValuationSets();
        result.init(data);
        return result;
    };
    PupilValuationSets.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
                var item = _a[_i];
                data["items"].push(item.toJSON());
            }
        }
        return data;
    };
    return PupilValuationSets;
}());
exports.PupilValuationSets = PupilValuationSets;
var PupilValuations = /** @class */ (function () {
    function PupilValuations(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    PupilValuations.prototype.init = function (_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (var _i = 0, _a = _data["items"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.items.push(PupilValuation.fromJS(item));
                }
            }
        }
    };
    PupilValuations.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new PupilValuations();
        result.init(data);
        return result;
    };
    PupilValuations.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
                var item = _a[_i];
                data["items"].push(item.toJSON());
            }
        }
        return data;
    };
    return PupilValuations;
}());
exports.PupilValuations = PupilValuations;
var Pupils = /** @class */ (function () {
    function Pupils(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    Pupils.prototype.init = function (_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (var _i = 0, _a = _data["items"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.items.push(Pupil.fromJS(item));
                }
            }
        }
    };
    Pupils.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new Pupils();
        result.init(data);
        return result;
    };
    Pupils.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
                var item = _a[_i];
                data["items"].push(item.toJSON());
            }
        }
        return data;
    };
    return Pupils;
}());
exports.Pupils = Pupils;
var School = /** @class */ (function () {
    function School(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.id = "00000000-0000-0000-0000-000000000000";
            this.type = "school";
            this.name = "<insert>";
        }
    }
    School.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"] !== undefined ? _data["id"] : "00000000-0000-0000-0000-000000000000";
            this.type = _data["type"] !== undefined ? _data["type"] : "school";
            this.name = _data["name"] !== undefined ? _data["name"] : "<insert>";
            this.changeDate = _data["changeDate"] ? new Date(_data["changeDate"].toString()) : undefined;
        }
    };
    School.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new School();
        result.init(data);
        return result;
    };
    School.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["type"] = this.type;
        data["name"] = this.name;
        data["changeDate"] = this.changeDate ? this.changeDate.toISOString() : undefined;
        return data;
    };
    return School;
}());
exports.School = School;
var SchoolClass = /** @class */ (function () {
    function SchoolClass(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.id = "00000000-0000-0000-0000-000000000000";
            this.schoolId = "00000000-0000-0000-0000-000000000000";
            this.type = "schoolClass";
            this.name = "<insert>";
        }
    }
    SchoolClass.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"] !== undefined ? _data["id"] : "00000000-0000-0000-0000-000000000000";
            this.schoolId = _data["schoolId"] !== undefined ? _data["schoolId"] : "00000000-0000-0000-0000-000000000000";
            this.type = _data["type"] !== undefined ? _data["type"] : "schoolClass";
            this.name = _data["name"] !== undefined ? _data["name"] : "<insert>";
            this.changeDate = _data["changeDate"] ? new Date(_data["changeDate"].toString()) : undefined;
        }
    };
    SchoolClass.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new SchoolClass();
        result.init(data);
        return result;
    };
    SchoolClass.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["schoolId"] = this.schoolId;
        data["type"] = this.type;
        data["name"] = this.name;
        data["changeDate"] = this.changeDate ? this.changeDate.toISOString() : undefined;
        return data;
    };
    return SchoolClass;
}());
exports.SchoolClass = SchoolClass;
var SchoolClasses = /** @class */ (function () {
    function SchoolClasses(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    SchoolClasses.prototype.init = function (_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (var _i = 0, _a = _data["items"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.items.push(SchoolClass.fromJS(item));
                }
            }
        }
    };
    SchoolClasses.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new SchoolClasses();
        result.init(data);
        return result;
    };
    SchoolClasses.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
                var item = _a[_i];
                data["items"].push(item.toJSON());
            }
        }
        return data;
    };
    return SchoolClasses;
}());
exports.SchoolClasses = SchoolClasses;
var Schools = /** @class */ (function () {
    function Schools(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    Schools.prototype.init = function (_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (var _i = 0, _a = _data["items"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.items.push(School.fromJS(item));
                }
            }
        }
    };
    Schools.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new Schools();
        result.init(data);
        return result;
    };
    Schools.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
                var item = _a[_i];
                data["items"].push(item.toJSON());
            }
        }
        return data;
    };
    return Schools;
}());
exports.Schools = Schools;
var ValidationError = /** @class */ (function () {
    function ValidationError(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.loc = [];
        }
    }
    ValidationError.prototype.init = function (_data) {
        if (_data) {
            if (Array.isArray(_data["loc"])) {
                this.loc = [];
                for (var _i = 0, _a = _data["loc"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.loc.push(item);
                }
            }
            this.msg = _data["msg"];
            this.type = _data["type"];
        }
    };
    ValidationError.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ValidationError();
        result.init(data);
        return result;
    };
    ValidationError.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.loc)) {
            data["loc"] = [];
            for (var _i = 0, _a = this.loc; _i < _a.length; _i++) {
                var item = _a[_i];
                data["loc"].push(item);
            }
        }
        data["msg"] = this.msg;
        data["type"] = this.type;
        return data;
    };
    return ValidationError;
}());
exports.ValidationError = ValidationError;
var Valuation = /** @class */ (function () {
    function Valuation(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.id = "00000000-0000-0000-0000-000000000000";
            this.type = "valuation";
            this.name = "<insert>";
        }
    }
    Valuation.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"] !== undefined ? _data["id"] : "00000000-0000-0000-0000-000000000000";
            this.type = _data["type"] !== undefined ? _data["type"] : "valuation";
            this.name = _data["name"] !== undefined ? _data["name"] : "<insert>";
            this.changeDate = _data["changeDate"] ? new Date(_data["changeDate"].toString()) : undefined;
        }
    };
    Valuation.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new Valuation();
        result.init(data);
        return result;
    };
    Valuation.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["type"] = this.type;
        data["name"] = this.name;
        data["changeDate"] = this.changeDate ? this.changeDate.toISOString() : undefined;
        return data;
    };
    return Valuation;
}());
exports.Valuation = Valuation;
var ValuationDetail = /** @class */ (function () {
    function ValuationDetail(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.id = "00000000-0000-0000-0000-000000000000";
            this.type = "valuationDetail";
            this.name = "<insert>";
            this.valuationId = "00000000-0000-0000-0000-000000000000";
            this.grade = 0;
        }
    }
    ValuationDetail.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"] !== undefined ? _data["id"] : "00000000-0000-0000-0000-000000000000";
            this.type = _data["type"] !== undefined ? _data["type"] : "valuationDetail";
            this.name = _data["name"] !== undefined ? _data["name"] : "<insert>";
            this.valuationId = _data["valuationId"] !== undefined ? _data["valuationId"] : "00000000-0000-0000-0000-000000000000";
            this.grade = _data["grade"] !== undefined ? _data["grade"] : 0;
            if (Array.isArray(_data["gradeTexts"])) {
                this.gradeTexts = [];
                for (var _i = 0, _a = _data["gradeTexts"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.gradeTexts.push(item);
                }
            }
            this.changeDate = _data["changeDate"] ? new Date(_data["changeDate"].toString()) : undefined;
        }
    };
    ValuationDetail.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ValuationDetail();
        result.init(data);
        return result;
    };
    ValuationDetail.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["type"] = this.type;
        data["name"] = this.name;
        data["valuationId"] = this.valuationId;
        data["grade"] = this.grade;
        if (Array.isArray(this.gradeTexts)) {
            data["gradeTexts"] = [];
            for (var _i = 0, _a = this.gradeTexts; _i < _a.length; _i++) {
                var item = _a[_i];
                data["gradeTexts"].push(item);
            }
        }
        data["changeDate"] = this.changeDate ? this.changeDate.toISOString() : undefined;
        return data;
    };
    return ValuationDetail;
}());
exports.ValuationDetail = ValuationDetail;
var ValuationDetailText = /** @class */ (function () {
    function ValuationDetailText(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
        if (!data) {
            this.id = "00000000-0000-0000-0000-000000000000";
            this.type = "valuationDetailText";
            this.text = "valuationDetail";
            this.valuationDetailId = "00000000-0000-0000-0000-000000000000";
        }
    }
    ValuationDetailText.prototype.init = function (_data) {
        if (_data) {
            this.id = _data["id"] !== undefined ? _data["id"] : "00000000-0000-0000-0000-000000000000";
            this.type = _data["type"] !== undefined ? _data["type"] : "valuationDetailText";
            this.text = _data["text"] !== undefined ? _data["text"] : "valuationDetail";
            this.valuationDetailId = _data["valuationDetailId"] !== undefined ? _data["valuationDetailId"] : "00000000-0000-0000-0000-000000000000";
        }
    };
    ValuationDetailText.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ValuationDetailText();
        result.init(data);
        return result;
    };
    ValuationDetailText.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["type"] = this.type;
        data["text"] = this.text;
        data["valuationDetailId"] = this.valuationDetailId;
        return data;
    };
    return ValuationDetailText;
}());
exports.ValuationDetailText = ValuationDetailText;
var ValuationDetailTexts = /** @class */ (function () {
    function ValuationDetailTexts(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ValuationDetailTexts.prototype.init = function (_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (var _i = 0, _a = _data["items"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.items.push(ValuationDetailText.fromJS(item));
                }
            }
        }
    };
    ValuationDetailTexts.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ValuationDetailTexts();
        result.init(data);
        return result;
    };
    ValuationDetailTexts.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
                var item = _a[_i];
                data["items"].push(item.toJSON());
            }
        }
        return data;
    };
    return ValuationDetailTexts;
}());
exports.ValuationDetailTexts = ValuationDetailTexts;
var ValuationDetails = /** @class */ (function () {
    function ValuationDetails(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    ValuationDetails.prototype.init = function (_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (var _i = 0, _a = _data["items"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.items.push(ValuationDetail.fromJS(item));
                }
            }
        }
    };
    ValuationDetails.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new ValuationDetails();
        result.init(data);
        return result;
    };
    ValuationDetails.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
                var item = _a[_i];
                data["items"].push(item.toJSON());
            }
        }
        return data;
    };
    return ValuationDetails;
}());
exports.ValuationDetails = ValuationDetails;
var Valuations = /** @class */ (function () {
    function Valuations(data) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    this[property] = data[property];
            }
        }
    }
    Valuations.prototype.init = function (_data) {
        if (_data) {
            if (Array.isArray(_data["items"])) {
                this.items = [];
                for (var _i = 0, _a = _data["items"]; _i < _a.length; _i++) {
                    var item = _a[_i];
                    this.items.push(Valuation.fromJS(item));
                }
            }
        }
    };
    Valuations.fromJS = function (data) {
        data = typeof data === 'object' ? data : {};
        var result = new Valuations();
        result.init(data);
        return result;
    };
    Valuations.prototype.toJSON = function (data) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (var _i = 0, _a = this.items; _i < _a.length; _i++) {
                var item = _a[_i];
                data["items"].push(item.toJSON());
            }
        }
        return data;
    };
    return Valuations;
}());
exports.Valuations = Valuations;
var ApiException = /** @class */ (function (_super) {
    __extends(ApiException, _super);
    function ApiException(message, status, response, headers, result) {
        var _this = _super.call(this) || this;
        _this.isApiException = true;
        _this.message = message;
        _this.status = status;
        _this.response = response;
        _this.headers = headers;
        _this.result = result;
        return _this;
    }
    ApiException.isApiException = function (obj) {
        return obj.isApiException === true;
    };
    return ApiException;
}(Error));
exports.ApiException = ApiException;
function throwException(message, status, response, headers, result) {
    if (result !== null && result !== undefined)
        throw result;
    else
        throw new ApiException(message, status, response, headers, null);
}
